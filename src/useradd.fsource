<?php
//SH

namespace Fujin\ConsoleApps;

use Exception;
use Fujin\Framework\Kernel\ConsoleApplication;
use Fujin\LibUniAuth;

class UserAdd extends ConsoleApplication
{
    const APP_NAME          = "Add user";
    const APP_ICON_GROUP    = "mimes";
    const APP_ICON          = "text-x-php";
    const APP_TYPE          = "cli";

    protected function main(array $args): void
    {
        $command = $args["m"][0];
        if($command == "exit")
        {
            $this->sys_exit(0);
        }
        else
        {
            $step = $this->__mem()->mem_r_get("step");

            $this->set_prompt("Set a new Fujin password: ");
            switch ($step) {
                case false:
                    $this->__mem()->mem_r_add("step", 1);
                    $this->__mem()->mem_r_add("username", $command);
                    break;
                case 1:
                    $this->__mem()->mem_r_add("step", 2);
                    $this->__mem()->mem_r_add("password", $command);
                    $this->set_prompt("User shell (/bin/sh): ");
                    break;
                case 2:
                    $this->__mem()->mem_r_add("step", 3);
                    if ($command == null)
                        $command = "/bin/sh";

                    $this->__mem()->mem_r_add("shell", $command);
                    $this->set_prompt("Graphical interface (/usr/share/raijin/raijin.appf): ");
                    break;
                case 3:
                    $this->__mem()->mem_r_add("step", 4);
                    if ($command == null)
                        $command = "/usr/share/raijin/raijin.appf";

                    $this->__mem()->mem_r_add("guish", $command);
                    $this->set_prompt("Name (): ");
                    break;
                case 4:
                    $this->__mem()->mem_r_add("step", 5);
                    if ($command == null)
                        $command = "";

                    $this->__mem()->mem_r_add("name", $command);
                    $this->set_prompt("Surname (): ");
                    break;
                case 5:
                    $this->__mem()->mem_r_add("step", 6);
                    if ($command == null)
                        $command = "";

                    $userlib = new LibUniAuth();
                    $domain = $userlib->get_domain();

                    $this->__mem()->mem_r_add("surname", $command);
                    $this->set_prompt("Email (" . $this->__mem()->mem_r_get("username") . "@" . $domain["domainName"] . "): ");
                    break;
                case 6:
                    $this->__mem()->mem_r_add("step", 7);
                    $userlib = new LibUniAuth();
                    $domain = $userlib->get_domain();
                    if ($command == null)
                        $command = $this->__mem()->mem_r_get("username") . "@" . $domain["domainName"];

                    $userlib = new LibUniAuth();
                    $domain = $userlib->get_domain();

                    $this->__mem()->mem_r_add("email", $command);
                    $this->set_prompt("Phone (): ");
                    break;
                case 7:
                    $this->__mem()->mem_r_add("step", 8);

                    if ($command == null)
                        $command = "";

                    $this->__mem()->mem_r_add("phone", $command);
                    $this->set_prompt("Are you sure, you want to create a new user? (Y/n) ");
                    break;
                case 8:
                    $this->__mem()->mem_r_add("step", false);

                    if ($command == null)
                        $command = "Y";


                    if ($command == "Y" || $command == "y") {
                        $libusr = new LibUniAuth();
                        $libusr->add_user(
                            $this->__mem()->mem_r_get("username"),
                            $this->__mem()->mem_r_get("password"),
                            $this->__mem()->mem_r_get("shell"),
                            $this->__mem()->mem_r_get("guish"),
                            $this->__mem()->mem_r_get("name"),
                            $this->__mem()->mem_r_get("surname"),
                            $this->__mem()->mem_r_get("email"),
                            $this->__mem()->mem_r_get("phone")
                        );
                        $this->print_ln("User created.");
                        $this->print_ln("");
                    } else {
                        $this->print_ln("User not created.");
                        $this->print_ln("");
                    }

                    $this->set_prompt("");
                    $this->sys_exit(130);
                    $this->kernel->sci_invoke_process($this->me->get_parent(), "");
                    break;
            }

        }

    }

    protected function sys_exit_before(): void
    {
        $this->__mem()->mem_r_add("step", false);
    }
}
?>